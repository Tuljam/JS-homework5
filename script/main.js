//
// ### NORMAL level

// #### Task 1 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const colors = ['red', 'green', 'blue']
// ```

// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –¥–ª–∏–Ω—É.

// –†–µ—à–µ–Ω–∏–µ

const colors = ['red', 'green', 'blue'];
console.log(colors.length);


// #### Task 2 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const animals = ['monkey', 'dog', 'cat']
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –¥–ª–∏–Ω–Ω—ã.

// –†–µ—à–µ–Ω–∏–µ
const animals = ['monkey', 'dog', 'cat'];

console.log(animals.length-1);

// #### Task 3 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const numbers = [5, 43, 63, 23, 90]
// ```

// –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
// delete numbers[0]; -> [undefined, 43, 63, 23, 90]
// > –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏.
// pop, splice, shift


// –†–µ—à–µ–Ω–∏–µ
const numbers = [5, 43, 63, 23, 90]
console.log(numbers.pop()) //—É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å—Å–∏–≤–∞

console.log(numbers.shift()) //—É–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å—Å–∏–≤–∞// 

const number = [5, 43, 63, 23, 90]
delete number[2];
delete number[4];
console.log(number);

// —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞
const numberr = [5, 43, 63, 23, 90]
numberr.splice(0,5);
console.log(numberr);

// 2 vatiant
const numDel = [5, 43, 63, 23, 90];
for (let i=0; i<numDel.length; i++) {
    delete numDel[i]  
}
 console.log(numDel);





// #### Task 4 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const students = ['Polina', 'Dasha', 'Masha']
// ```

// + –£–¥–∞–ª–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ `Borya`.
// + –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ `Andrey`.
// + –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å.


// let animals = ['cat', 'dog', 'bird'];

// animals.splice(1, 1, 'Andrew, the Tiger');

// –†–µ—à–µ–Ω–∏–µ
const students = ['Polina', 'Dasha', 'Masha'];
// 1–≤–∞—Ä–∏–∞–Ω—Ç
students.pop();

students.splice(2,0,`Borya`)
console.log(students);

// 2–≤–∞—Ä–∏–∞–Ω—Ç
students.splice(-1,1,`Borya`);
console.log(students);


// #### Task 5 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const cats = ['Gachito', 'Tom', 'Batman']
// ```

// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞. –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª **`for`**, –∑–∞—Ç–µ–º **`for of`**.
const cats = ['Gachito', 'Tom', 'Batman'];
for( let i=0; i<cats.length; i++){
    console.log(cats[i])
};

const catss = ['Foton', 'Kisel', 'Mouth'];
for (let catNew of catss) {
    console.log(catNew)
}


// #### Task 6 üñ•

// ```javascript
//     const evenNumbers = [2, 4, 6, 8, 10]
//     const oddNumbers = [1, 3, 5, 7, 9]
// ```

// + –°–æ–µ–¥–∏–Ω–∏—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª –≤ –æ–¥–∏–Ω. - concat



const evenNumbers = [2, 4, 6, 8, 10]
const oddNumbers = [1, 3, 5, 7, 9]
const arr = evenNumbers.concat(oddNumbers);
console.log(arr)

// + –í –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —á–∏—Å–ª–∞ **`8`** - indexOf
console.log(arr.indexOf(`8`));
// –æ—Ç–≤–µ—Ç -1


// #### Task 7 üñ•

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//     const binary = [0, 0, 0, 0]
// ```
 
// + –ù–∞—à –±–∏–Ω–∞—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–ø–æ–ª–Ω—ã–π, –≤ –Ω–µ–º —è–≤–Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ–¥–∏–Ω–∏—Ü.


// > [0, 0, 0, 0] -> '0101010'  

const binary = [0, 0, 0, 0];
binary.splice(1,0,1)
console.log(binary)
binary.splice(3,0,1)
console.log(binary)
binary.splice(5,0,1)
console.log(binary)

// +–ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É
console.log(binary.join())
console.log(typeof(binary));


// ### ADVANCED level

// > –î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª—ã **`for`** –∏–ª–∏ **`for of`**

// #### Task 1 üë®‚Äçüè´

// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ª–æ–≤–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º. -> reverse , then check it
function isPalindrome(s) {
    return s == s.split("").reverse().join("");
}

console.log(isPalindrome("malayalam")); 
console.log(isPalindrome("english")); 



// #### Task 2 üë®‚Äçüè´

// ```javascript
//     const matrix = [
//         [12, 98, 78, 65, 23],
//         [54, 76, 98, 43, 65],
//         [13, 324, 65, 312],
//         [9092, 22, 45, 90000],
//     ]
// ```

// > –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–µ–ª –≤ –º–Ω–æ–≥–æ–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.  -> Four average numbers

const matrix = [
            [12, 98, 78, 65, 23],
            [54, 76, 98, 43, 65],
            [13, 324, 65, 312],
            [9092, 22, 45, 90000],]
        
            let sum =0;
            for(let i=0; i<matrix.length; i++) {
                sum = sum + matrix[i]
            }
console.log(sum)

// 

let result = matrix.reduce(function(summ1, elem) {
	return summ1 + elem;
}, 0);

console.log(result);

// #### Task 3 üë®‚Äçüè´

// –î–∞–Ω –º–∞—Å—Å–∏–≤:

// ```javascript
//    const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4]
// ```

// –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞, –≤ –æ–¥–∏–Ω –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤—Å–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –≤–∫–ª—é—á–∞—è 0, –≤ –¥—Ä—É–≥–æ–π –≤—Å–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ. –û–±–∞ –º–∞—Å—Å–∏–≤–∞ –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å. 

// —Ä–µ—à–µ–Ω–∏–µ
const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4]

const numPlus= mixedNumbers.filter(i => i > 0);
console.log(numPlus)
const numMinus= mixedNumbers.filter(i => i <0);
console.log(numMinus)


// #### Task 4 üë®‚Äçüè´

// –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –¥–ª–∏–Ω–Ω–æ–π –Ω–µ –º–µ–Ω–µ–µ 5, –∏–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª. –î–∞–ª–µ–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –∫–æ—Ç–æ—Ä—ã–π –±–µ—Ä–µ—Ç –≤—Å–µ —á–∏—Å–ª–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –≤–æ–∑–≤–æ–¥–∏—Ç –∏—Ö –≤ –∫—É–± –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤. –í –∫–æ–Ω—Ü–µ –≤—ã–≤–µ—Å—Ç–∏ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å.
// Math.random() (-1 , 1)

// .map()

// let mapedArray = mixedNumbers.map(number => {
//     number += 2;
//     return number;

